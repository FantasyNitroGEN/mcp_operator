name: Docker

on:
  workflow_run:
    workflows: ["CI"]
    branches: [main, develop]
    types: [completed]
  push:
    tags: ['v*']
  pull_request:
    branches: [main]

permissions:
  contents: read
  packages: write
  security-events: write

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push:
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name != 'workflow_run' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
          fetch-depth: 0
      - name: Debug refs
        run: |
          echo "job sha: $GITHUB_SHA"
          echo "trigger sha: ${{ github.event.pull_request.head.sha || github.sha }}"
      - name: Compute image name (lowercase)
        id: image
        run: echo "IMAGE_NAME=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
      - uses: ./.github/actions/docker-build-push
        id: d
        with:
          registry: ghcr.io
          image-name: ${{ steps.image.outputs.IMAGE_NAME }}
          push: ${{ github.event_name != 'pull_request' }}
      - name: Tag image with commit SHA and push
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          set -e
          IMAGE="${{ steps.image.outputs.IMAGE_NAME }}"
          DIGEST="${{ steps.d.outputs.digest }}"
          TAG_SHA="sha-${{ github.event.workflow_run.head_sha || github.sha }}"
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
          docker buildx imagetools create -t "ghcr.io/${IMAGE}:${TAG_SHA}" "ghcr.io/${IMAGE}@${DIGEST}"
      - name: Tag as latest (main only)
        if: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/main' }}
        run: |
          set -e
          IMAGE="${{ steps.image.outputs.IMAGE_NAME }}"
          DIGEST="${{ steps.d.outputs.digest }}"
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
          docker buildx imagetools create -t "ghcr.io/${IMAGE}:latest" "ghcr.io/${IMAGE}@${DIGEST}"
    outputs:
      image: ${{ steps.d.outputs.image }}
      digest: ${{ steps.d.outputs.digest }}

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.event_name != 'pull_request'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
          fetch-depth: 0
      - name: Debug refs
        run: |
          echo "job sha: $GITHUB_SHA"
          echo "trigger sha: ${{ github.event.pull_request.head.sha || github.sha }}"

      - name: Set image name to lowercase
        id: image
        run: |
          echo "IMAGE_NAME=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Log in to Container Registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@dc5a429b52fcf669ce959baa2c2dd26090d2a6c4 # 0.32.0
        with:
          image-ref: ${{ needs.build-and-push.outputs.image }}@${{ needs.build-and-push.outputs.digest }}
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@3c3833e0f8c1c83d449a7478aa59c036a9165498 # v3
        if: always() && hashFiles('trivy-results.sarif') != ''
        with:
          sarif_file: 'trivy-results.sarif'
          category: trivy-docker
        continue-on-error: true

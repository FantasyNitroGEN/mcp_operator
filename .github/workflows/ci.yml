---
name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

permissions:
  contents: read
  security-events: write

env:
  GO_VERSION: '1.24'

jobs:
  setup:
    name: Setup Dependencies
    runs-on: ubuntu-latest
    outputs:
      go-cache-key: ${{ steps.cache-key.outputs.key }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Generate cache key
        id: cache-key
        run: |
          HASH="${{ hashFiles('**/go.sum') }}"
          if [ -z "$HASH" ]; then
            HASH="default"
          fi
          echo "key=${{ runner.os }}-go-$HASH" >> $GITHUB_OUTPUT

      - name: Cache Go modules and build cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ steps.cache-key.outputs.key || format('{0}-go-default', runner.os) }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download and verify dependencies
        run: |
          go mod download
          go mod verify

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Restore Go modules cache
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ needs.setup.outputs.go-cache-key || format('{0}-go-default', runner.os) }}

      - name: Generate manifests
        run: make manifests generate

      - name: Run go fmt
        run: make fmt

      - name: Run go vet
        run: make vet

      - name: Run tests
        run: make test

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./cover.out
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Restore Go modules cache
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ needs.setup.outputs.go-cache-key || format('{0}-go-default', runner.os) }}

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          args: --timeout=5m
          skip-cache: true

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Install Gosec
        run: go install github.com/securego/gosec/v2/cmd/gosec@latest

      - name: Run Gosec Security Scanner
        run: gosec -no-fail -fmt sarif -out results.sarif ./...

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        if: always() && hashFiles('results.sarif') != ''
        with:
          sarif_file: results.sarif
          category: gosec
        continue-on-error: true

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Restore Go modules cache
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ needs.setup.outputs.go-cache-key || format('{0}-go-default', runner.os) }}

      - name: Build binary
        run: make build

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: mcp-operator-binary
          path: bin/manager
          retention-days: 7